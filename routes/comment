// modules
const express = require("express");
// init
const router = express.Router();
// db
const {db} = require("../fb");
const AlbumsRef = db.collection("albums");
// joi validation
const { validateComment } = require("../models/comment.js")

router.get("/:id", async (req, res) => {
    let id = req.params.id
    try {
        let comments = await AlbumsRef.doc(id).collection("comments").get();
        let a = {};
        comments.forEach(d => a[d.id] = d.data());
        return res.status(200).json(a);
    } catch (err) {
        console.log(err);
        res.status(404).json({ "error": err });
    };
});


router.post("/:id", async (req, res) => {
    // Check if Album to be posted matches the joi schema
    let validation = validateComment(req.body);
    if (validation.error) {
        res.status(400).json({ "error": "Album validation error : " + validation.error });
        return;
    }

    try {
        let id = req.params.id;
        console.log(req.body);
        resp = await AlbumsRef.doc(id).collection("comments").add(req.body);
        // success
        res.status(201).json({ id: resp.id });
    } catch (err) {
        res.status(400).json({ "error": "Cannot post Comment : " + err });
    }
});

router.delete("/:id/:commentid", async (req, res) => {
    // Check if Album to be posted matches the joi schema
    let validation = validateComment(req.body);
    if (validation.error) {
        res.status(400).json({ "error": "Album validation error : " + validation.error });
        return;
    }

    try {
        let id = req.params.id;
        let commentid = req.params.commentid;
        console.log(id, commentid);
        resp = await AlbumsRef.doc(id).collection("comments").doc(commentid).delete();
        // success
        res.status(201).json({ id: resp.id });
    } catch (err) {
        res.status(400).json({ "error": "Cannot post Comment : " + err });
    }
});


module.exports = router;